@page "/add" 
@using Gerardr_Projet_NoSql.Models;
@inject HttpClient http
@inject IJSRuntime JsRuntime

<h3>Ajouter un Produit</h3>

<DxFormLayout CssClass="w-100">
    <DxFormLayoutItem Caption="Nom du produit:" ColSpanMd="12">
        <DxTextBox @bind-Text="@prod.Name" />
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Prix :" ColSpanMd="12">
        <DxSpinEdit @bind-Value="@prix" />
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Description :" ColSpanMd="12">
        <DxTextBox @bind-Text="@prod.Description" DisplayFormat="C"/>
    </DxFormLayoutItem>
    <DxFormLayoutItem Caption="Stock :" ColSpanMd="12">
        <DxSpinEdit @bind-Value="@stock" />
    </DxFormLayoutItem>
    <DxFormLayoutItem>
        <DxButton RenderStyle="ButtonRenderStyle.Secondary" Click="Post" Text="Ajouter" />
    </DxFormLayoutItem>

</DxFormLayout>




@code {

    Products prod = new Products();
    Products test = new Products();

    int prix = 0;
    int stock = 0;

    protected async Task Post() {
        try{

            if(prod.Name == null || prod.Description == null)
            {
                await JsRuntime.InvokeVoidAsync("alert", "La saisit est incomplète");
            }
            else
            {
                prod.Price = prix.ToString();
                prod.Stock = stock.ToString();
                await http.PostAsJsonAsync("api/products", prod);
                await http.PostAsJsonAsync("api/products/cache", prod);
                await Get();
                await JsRuntime.InvokeVoidAsync("alert", "L'élément a bien été ajouté");
                prod = new Products();
            }


        }catch(Exception e)
        {
            await JsRuntime.InvokeVoidAsync("alert", e);

        }

    }

    protected async Task Get()
    {
        test = await http.GetFromJsonAsync<Products>($"api/products/cache/{prod.Name}");
        Console.WriteLine(test);
    }

}
